name: Pull Request to master

on:
  push:
    branches:
      - master
    paths:
      - 'src/*'
      - '!package.json'
      - '!package-lock.json'

jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      
      - name: Configure committer
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>" 
      
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@allenyummy'
      
      - name: Run script
        run: |
          echo ${{ github.ref }}
          cat ./src/src.ts
          # newVersion=$(npm version prerelease --preid master --no-git-tag-version)
          # git status
          # git commit -am "chore(fe/abc): bump version to $newVersion"
      
      # - name: Create Pull Request
      #   id: cpr
      #   uses: peter-evans/create-pull-request@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Check outputs
      #   if: ${{ steps.cpr.outputs.pull-request-number }}
      #   run: |
      #     echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
      #     echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
      #     echo "Pull Request Operation - ${{ steps.cpr.outputs.pull-request-operation }}"

      # - name: Enable Automerge
      #   uses: peter-evans/enable-pull-request-automerge@v2
      #   with:
      #     token: ${{ secrets.REVIEW_TOKEN }}
      #     pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
      #     merge-method: squash

      # - name: Auto approve
      #   uses: juliangruber/approve-pull-request-action@v1
      #   with:
      #     github-token: ${{ secrets.REVIEW_TOKEN }}
      #     number: ${{ steps.cpr.outputs.pull-request-number }}
      
      - name: Print changed files
        run: |

      - name: Get staged files in two commits
        id: staged-files
        run: |
          git fetch origin master:refs/remotes/origin/master
          before_commit=${{ github.event.before }}
          after_commit=${{ github.event.after }}
          files=$(git diff --name-only before_commit after_commit)
          echo "::set-output name=staged_files::$files"

      - name: Print staged files
        run: |
          echo "Staged files:"
          echo "${{ steps.staged-files.outputs.staged_files }}"
      
      # - name: Print labels
      #   run: |
      #     echo "Label:"
      #     for label in "${{ github.event.pull_request.labels }}"; do
      #         echo "- $label"
      #     done
      
      # - name: Print target branch
      #   run: |
      #     echo ${{ github.event.pull_request.base.ref }}
      
      # - name: Print changed files
      #   run: |
      #     echo "Changed files:"
      #     echo ${{ github.event.commits.added }}
      #     echo ${{ github.event.commits.modified }}
      #     echo ${{ github.event.commits.removed }}

      #     # for file in "${{ github.event.head_commit.added }} "; do
      #     #   if [[ $file == src/* ]]; then
      #     #     echo "- $file"
      #     #   fi
      #     # done
